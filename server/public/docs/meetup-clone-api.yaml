openapi: "3.0.0"
info:
  version: 1.0.0
  title: Meetup Clone API
  license:
    name: MIT
servers:
  - url: http://localhost:8080/
paths:
  /users:
    get:
      summary: List users
      tags:
        - users
      parameters:
        - name: location
          in: query
          required: false
          description: the location
          schema:
            type: string
        - name: radius
          in: query
          required: false
          default: 20km
          description: location radius
          schema:
            type: string
      responses:
        '200':
          description: An array of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
  /user:
    post:
      summary: Create new user
      operationId: createUser
      tags:
        - users
      requestBody:
        description: User to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
    put:
      security:
        - basicAuth: []
      summary: Update user information
      tags:
        - users
      requestBody:
        description: User to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
    delete:
      security:
        - basicAuth: []
      summary: Delete user
      tags:
        - users
      responses:
        '200':
          description: OK
  /validation/{vid}:
    /get:
      tags:
        - user-validation
      parameters:
        - name: vid
          in: path
          required: true
          description: validation id
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403': 
          description: Forbidden
  /groups:
    get:
      summary: List groups
      operationId: listGroups
      tags:
        - groups
      parameters:
        - name: location
          in: query
          required: false
          description: the location
          schema:
            type: string
        - name: radius
          in: query
          required: false
          default: 20km
          description: location radius
          schema:
            type: string
      responses:
        '200':
          description: An array of groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
  /group:
    post:
      security:
        - basicAuth: []
      summary: Create new group
      operationId: createGroup
      requestBody:
        description: Group to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      tags:
        - groups
  /group/{id}:
    put:
      security:
        - basicAuth: []
      summary: Update group
      operationId: updateGroup
      parameters:
        - name: id
          in: path
          required: true
          description: group id
          schema:
            type: string
      tags:
        - groups
    delete:
      security:
        - basicAuth: []
      summary: Delete group
      operationId: deleteGroup
      parameters:
        - name: id
          in: path
          required: true
          description: group id
          schema:
            type: string
      tags:
        - groups
  /group/{id}/members:
    get:
      summary: Get group members
      tags:
        - group-members
  /group/{id}/member:
    post:
      security:
        - basicAuth: []
      summary: Add group member / join group
      tags:
        - group-members
    delete:
      security:
        - basicAuth: []
      summary: Delete member / leave group
      tags:
        - group-members
  /group/{id}/events:
    get:
      summary: Get events
      tags:
        - group-events
    post:
      security:
        - basicAuth: []
      summary: Submit RSVP
      tags: 
        - group-events
      parameters:
        - name: rsvp
          in: query
          description: yes or no
          required: true
          schema:
            type: string
            example: yes
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    User:
      required:
        - id
      properties:
        id:
          type: string
        password:
          type: string
        name:
          type: string
        email:
          type: string
        active:
          type: boolean
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Group:
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    Groups:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    Event:
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        address:
          type: string
        lat:
          type: double
        lon:
          type: double
        date:
          type: dateTime
    Events:
      type: array
      items:
        $ref: '#/components/schemas/Event'          
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
